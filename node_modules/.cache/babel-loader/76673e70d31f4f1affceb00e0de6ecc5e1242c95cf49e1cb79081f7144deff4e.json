{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst phoneContacts = {\n  items: [{\n    id: 'id-1',\n    name: 'Steve Jobs',\n    number: '459-12-56'\n  }, {\n    id: 'id-2',\n    name: 'Bill Gates',\n    number: '443-89-12'\n  }, {\n    id: 'id-3',\n    name: 'Elon Musk',\n    number: '645-17-79'\n  }, {\n    id: 'id-4',\n    name: 'Mark Zuckerberg',\n    number: '227-91-26'\n  }]\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: phoneContacts,\n  reducers: {\n    addContact: {\n      reducer(state, action) {\n        state.items.push(action.payload);\n      }\n    },\n    prepare(newContact) {\n      return {\n        payload: {\n          id: nanoid(),\n          ...newContact\n        }\n      };\n    }\n  }\n});","map":{"version":3,"names":["createSlice","nanoid","persistReducer","storage","phoneContacts","items","id","name","number","contactsSlice","initialState","reducers","addContact","reducer","state","action","push","payload","prepare","newContact"],"sources":["/Users/victorsvertoka/Desktop/projects/goit-react-hw-06-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst phoneContacts = {\n  items: [\n    { id: 'id-1', name: 'Steve Jobs', number: '459-12-56' },\n    { id: 'id-2', name: 'Bill Gates', number: '443-89-12' },\n    { id: 'id-3', name: 'Elon Musk', number: '645-17-79' },\n    { id: 'id-4', name: 'Mark Zuckerberg', number: '227-91-26' },\n  ],\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: phoneContacts,\n  reducers: {\n    addContact: {\n      reducer(state, action) {\n        state.items.push(action.payload);\n      },\n    },\n    prepare(newContact) {\n      return {\n        payload: { id: nanoid(), ...newContact },\n      };\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAY,CAAC,EACvD;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAY,CAAC,EACvD;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAY,CAAC,EACtD;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,MAAM,EAAE;EAAY,CAAC;AAEhE,CAAC;AAED,MAAMC,aAAa,GAAGT,WAAW,CAAC;EAChCO,IAAI,EAAE,UAAU;EAChBG,YAAY,EAAEN,aAAa;EAC3BO,QAAQ,EAAE;IACRC,UAAU,EAAE;MACVC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrBD,KAAK,CAACT,KAAK,CAACW,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAClC;IACF,CAAC;IACDC,OAAOA,CAACC,UAAU,EAAE;MAClB,OAAO;QACLF,OAAO,EAAE;UAAEX,EAAE,EAAEL,MAAM,CAAC,CAAC;UAAE,GAAGkB;QAAW;MACzC,CAAC;IACH;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}