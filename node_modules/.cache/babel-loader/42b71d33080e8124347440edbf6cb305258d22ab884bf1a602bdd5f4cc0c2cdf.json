{"ast":null,"code":"var _jsxFileName = \"/Users/victorsvertoka/Desktop/projects/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Form, Label, Button, Input } from './ContactForm.styled';\nimport { ReactComponent as AddIcon } from '../icons/add.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsSlice';\n\n// Генерация уникальных идентификаторов для полей формы.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\nconst ContactForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  // Обработка отправки формы.\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isInContacts = contacts.some(contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim());\n\n    // Проверяет, существует ли контакт с таким же именем в списке контактов. Если контакт уже существует, выводится предупреждение.\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    // Вызов функции onSubmit из родительского компонента с передачей объекта контакта.\n    dispatch(addContact({\n      name,\n      number\n    }));\n    setName('');\n    setNumber('');\n  };\n\n  // Обработка изменения значений полей формы.\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: nameInputId,\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: handleChange,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: numberInputId,\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"tel\",\n        name: \"number\",\n        value: number,\n        onChange: handleChange,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n        fill: \"#f08080\",\n        width: \"25\",\n        height: \"25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \"Add contact\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"ijfDkDP9eSZLnoz5mvgk4ldpyNI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["useState","nanoid","Form","Label","Button","Input","ReactComponent","AddIcon","useSelector","useDispatch","getVisibleContacts","addContact","jsxDEV","_jsxDEV","nameInputId","numberInputId","ContactForm","_s","name","setName","number","setNumber","contacts","dispatch","handleSubmit","event","preventDefault","isInContacts","some","contact","toLowerCase","trim","alert","handleChange","value","target","onSubmit","children","htmlFor","type","onChange","pattern","title","required","fileName","_jsxFileName","lineNumber","columnNumber","fill","width","height","_c","$RefreshReg$"],"sources":["/Users/victorsvertoka/Desktop/projects/goit-react-hw-07-phonebook/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Form, Label, Button, Input } from './ContactForm.styled';\nimport { ReactComponent as AddIcon } from '../icons/add.svg';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsSlice';\n\n// Генерация уникальных идентификаторов для полей формы.\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  // Обработка отправки формы.\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    // Проверяет, существует ли контакт с таким же именем в списке контактов. Если контакт уже существует, выводится предупреждение.\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    // Вызов функции onSubmit из родительского компонента с передачей объекта контакта.\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  // Обработка изменения значений полей формы.\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">\n        <AddIcon fill=\"#f08080\" width=\"25\" height=\"25\" />\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}