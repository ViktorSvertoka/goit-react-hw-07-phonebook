{"ast":null,"code":"var _jsxFileName = \"/Users/victorsvertoka/Desktop/projects/goit-react-hw-06-phonebook/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Container, Title, SubTitle, Wrapper } from './App.styled';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneContacts = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nconst App = () => {\n  _s();\n  // Значение извлекается из локального хранилища браузера с ключом 'contacts'\n  const [contacts, setContacts] = useState(() => {\n    var _JSON$parse;\n    return (_JSON$parse = JSON.parse(window.localStorage.getItem('contacts'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : phoneContacts; //Если значение не найдено, устанавливается значение массива phoneContacts.\n  });\n\n  const [filter, setFilter] = useState('');\n\n  // Срабатывает при изменении состояния contacts. Сохраняет текущие контакты в локальное хранилище браузера с ключом 'contacts'.\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Добавляет новый контакт в список контактов.\n  const addContact = contact => {\n    const isInContacts = contacts.some(_ref => {\n      let {\n        name\n      } = _ref;\n      return name.toLowerCase().trim() === contact.name.toLowerCase().trim();\n    });\n    // Проверяет, существует ли контакт с таким же именем в списке контактов. Если контакт уже существует, выводится предупреждение.\n    if (isInContacts) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    setContacts(prevContacts => [...prevContacts, {\n      id: nanoid(),\n      ...contact\n    }]);\n  };\n\n  //Изменяет значение фильтра.\n  const changeFilter = event => {\n    setFilter(event.target.value.trim());\n  };\n\n  // Получение отфильтрованных контактов.\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  // Удаление контакта из списка.\n  const removeContact = contactId => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId));\n  };\n  const visibleContacts = getVisibleContacts();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), contacts.length > 0 ?\n    /*#__PURE__*/\n    // Фильтр для отображения контактов.\n    _jsxDEV(Filter, {\n      value: filter,\n      onChangeFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: \"Your phonebook is empty. Add first contact!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), contacts.length > 0 &&\n    /*#__PURE__*/\n    // Список контактов.\n    _jsxDEV(ContactList, {\n      contacts: visibleContacts,\n      onRemoveContact: removeContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"b/STnLFEkQD5QkNGPPAyJiD1V8Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","nanoid","Container","Title","SubTitle","Wrapper","ContactForm","ContactList","Filter","jsxDEV","_jsxDEV","phoneContacts","id","name","number","App","_s","contacts","setContacts","_JSON$parse","JSON","parse","window","localStorage","getItem","filter","setFilter","setItem","stringify","addContact","contact","isInContacts","some","_ref","toLowerCase","trim","alert","prevContacts","changeFilter","event","target","value","getVisibleContacts","normalizedFilter","includes","removeContact","contactId","visibleContacts","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","length","onChangeFilter","onRemoveContact","_c","$RefreshReg$"],"sources":["/Users/victorsvertoka/Desktop/projects/goit-react-hw-06-phonebook/src/components/App/App.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Container, Title, SubTitle, Wrapper } from './App.styled';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nconst phoneContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst App = () => {\n  // Значение извлекается из локального хранилища браузера с ключом 'contacts'\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? phoneContacts; //Если значение не найдено, устанавливается значение массива phoneContacts.\n  });\n\n  const [filter, setFilter] = useState('');\n\n  // Срабатывает при изменении состояния contacts. Сохраняет текущие контакты в локальное хранилище браузера с ключом 'contacts'.\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Добавляет новый контакт в список контактов.\n  const addContact = contact => {\n    const isInContacts = contacts.some(\n      ({ name }) =>\n        name.toLowerCase().trim() === contact.name.toLowerCase().trim()\n    );\n    // Проверяет, существует ли контакт с таким же именем в списке контактов. Если контакт уже существует, выводится предупреждение.\n    if (isInContacts) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    setContacts(prevContacts => [\n      ...prevContacts,\n      { id: nanoid(), ...contact },\n    ]);\n  };\n\n  //Изменяет значение фильтра.\n  const changeFilter = event => {\n    setFilter(event.target.value.trim());\n  };\n\n  // Получение отфильтрованных контактов.\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  // Удаление контакта из списка.\n  const removeContact = contactId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactId)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n\n      <ContactForm onSubmit={addContact} />\n\n      <SubTitle>Contacts</SubTitle>\n      {contacts.length > 0 ? (\n        // Фильтр для отображения контактов.\n        <Filter value={filter} onChangeFilter={changeFilter} />\n      ) : (\n        <Wrapper>Your phonebook is empty. Add first contact!</Wrapper>\n      )}\n      {contacts.length > 0 && (\n        // Список контактов.\n        <ContactList\n          contacts={visibleContacts}\n          onRemoveContact={removeContact}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}