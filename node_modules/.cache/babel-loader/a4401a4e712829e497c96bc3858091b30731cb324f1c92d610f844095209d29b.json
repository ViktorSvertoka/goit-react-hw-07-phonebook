{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport { contactsReducer } from './contactsSlice';\nimport { filterReducer } from './filterSlice';\n\n// Создание хранилища Redux с помощью configureStore\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    // Редюсер для управления состоянием контактов\n    filter: filterReducer // Редюсер для управления состоянием фильтра\n  },\n\n  // Применение middleware с помощью getDefaultMiddleware\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\n\n// Создание персистентного хранилища, которое сохраняет состояние хранилища Redux при перезагрузке страницы\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsReducer","filterReducer","store","reducer","contacts","filter","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","persistor"],"sources":["/Users/victorsvertoka/Desktop/projects/goit-react-hw-06-phonebook/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contactsReducer } from './contactsSlice';\nimport { filterReducer } from './filterSlice';\n\n// Создание хранилища Redux с помощью configureStore\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer, // Редюсер для управления состоянием контактов\n    filter: filterReducer, // Редюсер для управления состоянием фильтра\n  },\n\n  // Применение middleware с помощью getDefaultMiddleware\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\n// Создание персистентного хранилища, которое сохраняет состояние хранилища Redux при перезагрузке страницы\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SACEC,YAAY,EACZC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,aAAa,QAAQ,eAAe;;AAE7C;AACA,OAAO,MAAMC,KAAK,GAAGV,cAAc,CAAC;EAClCW,OAAO,EAAE;IACPC,QAAQ,EAAEJ,eAAe;IAAE;IAC3BK,MAAM,EAAEJ,aAAa,CAAE;EACzB,CAAC;;EAED;EACAK,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,aAAa,EAAE,CAACf,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACnE;EACF,CAAC;AACL,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMW,SAAS,GAAGjB,YAAY,CAACS,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}